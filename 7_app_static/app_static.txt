static 메서드를 이용해 images, CSS, JS와 같은 static file들을 제공할 수 있다. 
기본적으로 디렉토리에 있는 index.html을 serve 한다.
 - func (app *App) Static(prefix, root string, config .. Static) Router

fiber.Static 구조체를 사용하여 특정 세팅들을 조절할 수 있다.
type Static struct {
	Compress bool `json:"compress"`
	// true => 서버는 압축 파일을 캐싱하여 CPU 사용량을 최소화한다. (default: false)
	// 이는 github.com/gofiber/compression 미들웨어와는 다르게 작동한다.

	ByteRange bool `json:"byte_range"`
	// true => 바이트 범위 요청을 활성화한다. (default: false)

	Browse bool `json:"browse"`
	// true => 디렉토리 검색을 활성화한다. (default: false)

	Download bool `json:"download"`
	// true => 직접 다운로드가 가능하다. (default: false)

	Index string `json:"index"`
	// 디렉토리를 서비스하기 위한 인덱스 파일의 이름 (default: index.html)

	CacheDuration time.Duration `json:"cache_duration"`
	// 캐시 만료 기간
	// 음의 시간을 사용하여 사용하지 않도록 설정한다. (default: 10 * time.Second)

	MaxAge int `json:"max_age"`
	// Cache-Control HTTP header의 값
	// 파일 응답에 따라 설정되며, 초 단위로 정의된다. (default: 0)

	ModifyResponse Handler
	// 응답을 변경할 수 있는 함수를 정의한다. (default: nil)

	Next func(c *Ctx) bool
	// true일 경우 다음은 이 미들웨어를 건너 뛸 수 있는 함수를 정의한다. (default: false)

}